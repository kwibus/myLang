name:                myLang
version:             0.1.0.0
synopsis: complier for my own language
description: this is a attent of me to creating my own Programming language.
             the language is now similar to typed lambda calculus, and has only a interpreter.
             But I have plans for a complete Programming language similar to Haskell, but with: Linear Types, Region Interferences, strict symatics.
license:             BSD3
license-file:        LICENSE
category: Compilers/Interpreters
author:              Rens
maintainer:          de_kwibus@live.nl

build-type:          Simple
cabal-version:       >=1.10

source-repository this
  type:     git
  location: file:///home/rens/Documenten/projects/myLang
  tag: HEAD

library
  hs-source-dirs:      src/
  build-depends:       base >=4 && < 5
                      ,containers
                      ,parsec
                      ,parsec-numbers
                      ,mtl
                      ,dlist
                      ,transformers
                      ,ansi-wl-pprint
                      ,assert-failure

  exposed-modules:     Lambda
                      ,LambdaF
                      ,LambdaF2
                      ,MTable
                      ,Inprocess
                      ,BottumUp
                      ,TaggedLambda
                      ,TopologicalSort
                      ,Parser
                      ,Lexer
                      ,Value
                      ,BruijnTerm
                      ,Eval
                      ,Step
                      ,SimpleEval
                      ,Operator
                      ,PrettyPrint
                      ,Type
                      ,MakeType
                      ,TypeCheck
                      ,FreeEnvironment
                      ,BruijnEnvironment
                      ,InfixFix
                      ,Info
                      ,TypeError
                      ,ErrorCollector
                      ,Name
                      ,Associativity
                      ,Modify
                      ,ModificationTags
                      ,Unprocessed
  Ghc-Options:          -Wall -fno-ignore-asserts

  default-language:    Haskell2010

executable interperter
  main-is:             Interperter.hs
  hs-source-dirs:      src/Interperter/
  build-depends:       base >=4 && < 5
                      ,myLang
                      ,either-unwrap
                      ,haskeline
                      ,transformers
                      ,ansi-wl-pprint
                      ,mtl
                      ,containers
                      ,parsec
                      ,parsec-numbers

  default-language:    Haskell2010

executable sample
  main-is:             Sample.hs
  hs-source-dirs:      tests/
  build-depends:       base >=4 && < 5
                      ,myLang
                      ,QuickCheck
                      ,mtl
                      ,transformers
                      ,containers
  default-language:    Haskell2010

  -- exposed-modules:     MakeTerm
  other-modules:      ArbiRef
                      ,ArbitraryLambda
                      ,ArbitraryValue
                      ,GenState
                      ,Logic
                      ,MakeTerm
                      ,SearchTree

test-suite tests
  Hs-Source-Dirs:      tests
  Main-Is:             test.hs
  Type:                exitcode-stdio-1.0

  Build-Depends:       base >=4 && < 5
                      ,myLang
                      ,tasty
                      ,tasty-hunit
                      ,tasty-quickcheck
                      ,QuickCheck
                      ,mtl
                      ,containers
                      ,transformers
                      ,checkers
                      ,parsec
                      ,parsec-numbers
                      ,ansi-wl-pprint
                      ,dlist

  other-modules:      ArbiRef
                      ,ArbitraryLambda
                      ,ArbitraryType
                      ,ArbitraryValue
                      ,ExampleBruijn
                      ,ExampleLambda
                      ,GenState
                      ,Logic
                      ,MakeTerm
                      ,Properties
                      ,SearchTree
                      ,TestSearchTree
                      ,TestArbitrary
                      ,TestBruijn
                      ,TestEval
                      ,TestLogic
                      ,TestParser
                      ,TestPrettyPrintLambda
                      ,TestSetParseShow
                      ,TestType
                      ,TestTypeCheker
                      ,MakeTagedTerm
                      ,TestModify
                      ,TestTopologicalSort
                      ,TestUtils
  Ghc-Options:          -Wall -fno-ignore-asserts -threaded -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010

test-suite doctests
  type:                exitcode-stdio-1.0
  main-is:             doctests.hs
  Hs-Source-Dirs:      tests
  build-depends:       base >=4 && < 5
                      ,myLang
                      ,doctest-discover
                      ,doctest

  other-modules:      MakeTerm
  default-language:    Haskell2010
  ghc-options:         -threaded -Wall -rtsopts -with-rtsopts=-N

Benchmark bench
    type:       exitcode-stdio-1.0
    main-is:    benchmark.hs
    Hs-Source-Dirs: tests, tests/bench
    build-depends:  base
                    ,myLang
                    ,criterion
                    ,QuickCheck
                    ,mtl
                    ,parsec
                    ,transformers
                    ,containers
                    ,deepseq
                    ,deepseq-generics
    default-language:    Haskell2010

  other-modules:    ArbiRef
                    ,ArbitraryLambda
                    ,ArbitraryValue
                    ,ExampleBruijn
                    ,GenState
                    ,Logic
                    ,MakeTerm
                    ,NFDataInstances
                    ,SearchTree
